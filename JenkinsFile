pipeline {
	agent { label 'windows' }
    parameters {
			string(name: 'aws_profile', defaultValue: 'aws-test', description: 'Provide aws profile')
			string(name: 'aws_region', defaultValue: 'us-west', description: 'Provide aws region')
            choice(name: 'build_type', choices:['Debug'], description: 'Build a Release or Debug version')
	}
	stages {
		stage('Build Information') {
			steps {
				script {
					currentBuild.description = """ Profile: ${params.aws_profile} Branch: ${params.BRANCH} Region: ${params.aws_region} """
				}
		        bat "\"${tool 'msbuild'}\" -version"
			}
		}

		stage('Build') {
			steps {

				// Download nuget packages
				bat 'nuget restore sample-dotnetframework-app/SampleNetApp/SampleApplication.sln'
			
				// Build the solution
		        bat "\"${tool 'msbuild'}\" sample-dotnetframework-app/SampleNetApp/SampleApplication.sln /nr:false /m -p:OutputPath=.\\bin\\publish /p:Configuration=Debug /p:Platform=\"Any CPU\" /p:ProductVersion=1.0.0.${env.BUILD_NUMBER} /p:GenerateBuildInfoConfigFile=false /p:GenerateProjectSpecificOutputFolder=True /p:SkipInvalidConfigurations=true /p:langversion=latest"
			}
		}

		stage('Upload') {
            steps {
				powershell "C:/jenkins/workspace/pipeline/tools/7z.exe a -tzip -r SCI.Website.zip '.\\SampleNetApp\\bin\\publish\\*' "
                // Upload files
                // withCredentials([string(credentialsId: 's3-sci-stg-kms-id', variable: 'Secret')]) {
                //     powershell """aws s3 cp SCI.Website.zip s3://sci-stg/Web/${params.BRANCH}/SCI.Website.zip --sse aws:kms --sse-kms-key-id ${Secret} --profile aws-nonprod"""
                //  }
            }
        }
	}

	post {
		always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
	}
}